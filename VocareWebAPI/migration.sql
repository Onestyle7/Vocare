CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE public."AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE public."AspNetUsers" (
    "Id" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);

CREATE TABLE public."ServiceCosts" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ServiceName" text NOT NULL,
    "TokenCost" integer NOT NULL,
    CONSTRAINT "PK_ServiceCosts" PRIMARY KEY ("Id")
);

CREATE TABLE public."SwotAnalysis" (
    "Id" uuid NOT NULL,
    "Strengths" text[] NOT NULL,
    "Weaknesses" text[] NOT NULL,
    "Opportunities" text[] NOT NULL,
    "Threats" text[] NOT NULL,
    CONSTRAINT "PK_SwotAnalysis" PRIMARY KEY ("Id")
);

CREATE TABLE public."TokenTransactions" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ServiceName" text NOT NULL,
    "Amount" integer NOT NULL,
    "Type" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_TokenTransactions" PRIMARY KEY ("Id")
);

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."GeneratedCvs" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "Position" text,
    "CvJson" character varying(8000) NOT NULL,
    "RawApiResponse" character varying(8000) NOT NULL,
    "GeneratedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_GeneratedCvs" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_GeneratedCvs_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."UserBillings" (
    "UserId" text NOT NULL,
    "TokenBalance" integer NOT NULL,
    "StripeCustomerId" text,
    "StripeSubscriptionId" text,
    "SubscriptionStatus" integer NOT NULL,
    "SubscriptionLevel" integer NOT NULL,
    "LastTokenPurchaseDate" timestamp with time zone,
    "SubscriptionEndDate" timestamp with time zone,
    CONSTRAINT "PK_UserBillings" PRIMARY KEY ("UserId"),
    CONSTRAINT "FK_UserBillings_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."UserProfiles" (
    "UserId" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Country" text NOT NULL,
    "Address" text,
    "PhoneNumber" text,
    "Skills" text[] NOT NULL,
    "AdditionalInformation" text,
    "AboutMe" text,
    "PersonalityType" integer NOT NULL,
    "SoftSkills" text[] NOT NULL,
    CONSTRAINT "PK_UserProfiles" PRIMARY KEY ("UserId"),
    CONSTRAINT "FK_UserProfiles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AiRecommendations" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "RecommendationDate" timestamp with time zone NOT NULL,
    "PrimaryPath" text NOT NULL,
    "Justification" text NOT NULL,
    "LongTermGoal" text NOT NULL,
    "AiRecommendationId" uuid,
    CONSTRAINT "PK_AiRecommendations" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AiRecommendations_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id"),
    CONSTRAINT "FK_AiRecommendations_UserProfiles_UserId" FOREIGN KEY ("UserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

CREATE TABLE public."CertificateEntry" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "Date" timestamp with time zone,
    "Issuer" text,
    "UserProfileUserId" text,
    CONSTRAINT "PK_CertificateEntry" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CertificateEntry_UserProfiles_UserProfileUserId" FOREIGN KEY ("UserProfileUserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

CREATE TABLE public."EducationEntry" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Institution" text NOT NULL,
    "Degree" text NOT NULL,
    "Field" text NOT NULL,
    "StartDate" timestamp with time zone,
    "EndDate" timestamp with time zone,
    "UserProfileUserId" text,
    CONSTRAINT "PK_EducationEntry" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_EducationEntry_UserProfiles_UserProfileUserId" FOREIGN KEY ("UserProfileUserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

CREATE TABLE public."LanguageEntry" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Language" text NOT NULL,
    "Level" text NOT NULL,
    "UserProfileUserId" text,
    CONSTRAINT "PK_LanguageEntry" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_LanguageEntry_UserProfiles_UserProfileUserId" FOREIGN KEY ("UserProfileUserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

CREATE TABLE public."WorkExperienceEntry" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Company" text NOT NULL,
    "Position" text NOT NULL,
    "Description" text NOT NULL,
    "Responsibilities" text[],
    "StartDate" timestamp with time zone,
    "EndDate" timestamp with time zone,
    "UserProfileUserId" text,
    CONSTRAINT "PK_WorkExperienceEntry" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_WorkExperienceEntry_UserProfiles_UserProfileUserId" FOREIGN KEY ("UserProfileUserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

CREATE TABLE public."CareerStatistics" (
    "Id" uuid NOT NULL,
    "CareerName" text NOT NULL,
    "AverageSalaryMin" numeric NOT NULL,
    "AverageSalaryMax" numeric NOT NULL,
    "EmploymentRate" integer NOT NULL,
    "GrowthForecast" text NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "AiRecommendationId" uuid NOT NULL,
    CONSTRAINT "PK_CareerStatistics" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CareerStatistics_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."MarketTrends" (
    "Id" uuid NOT NULL,
    "TrendName" text NOT NULL,
    "Description" text NOT NULL,
    "Impact" text NOT NULL,
    "StartDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone,
    "AiRecommendationId" uuid NOT NULL,
    CONSTRAINT "PK_MarketTrends" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_MarketTrends_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."NextStep" (
    "Id" uuid NOT NULL,
    "Step" text NOT NULL,
    "AiRecommendationId" uuid,
    CONSTRAINT "PK_NextStep" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_NextStep_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id")
);

CREATE TABLE public."SkillDemand" (
    "Id" uuid NOT NULL,
    "SkillName" text NOT NULL,
    "Industry" text NOT NULL,
    "DemandLevel" text NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "AiRecommendationId" uuid NOT NULL,
    CONSTRAINT "PK_SkillDemand" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_SkillDemand_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."CareerPath" (
    "Id" uuid NOT NULL,
    "CareerName" text NOT NULL,
    "Description" text NOT NULL,
    "Probability" text NOT NULL,
    "RequiredSkills" text[] NOT NULL,
    "MarketAnalysis" text[] NOT NULL,
    "RecommendedCourses" text[] NOT NULL,
    "SwotAnalysisId" uuid NOT NULL,
    "CareerStatisticsId" uuid,
    "AiRecommendationId" uuid,
    CONSTRAINT "PK_CareerPath" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CareerPath_AiRecommendations_AiRecommendationId" FOREIGN KEY ("AiRecommendationId") REFERENCES public."AiRecommendations" ("Id"),
    CONSTRAINT "FK_CareerPath_CareerStatistics_CareerStatisticsId" FOREIGN KEY ("CareerStatisticsId") REFERENCES public."CareerStatistics" ("Id"),
    CONSTRAINT "FK_CareerPath_SwotAnalysis_SwotAnalysisId" FOREIGN KEY ("SwotAnalysisId") REFERENCES public."SwotAnalysis" ("Id") ON DELETE CASCADE
);

INSERT INTO public."ServiceCosts" ("Id", "ServiceName", "TokenCost")
VALUES (1, 'AnalyzeProfile', 5);
INSERT INTO public."ServiceCosts" ("Id", "ServiceName", "TokenCost")
VALUES (2, 'GenerateCV', 5);
INSERT INTO public."ServiceCosts" ("Id", "ServiceName", "TokenCost")
VALUES (3, 'MarketAnalysis', 5);
INSERT INTO public."ServiceCosts" ("Id", "ServiceName", "TokenCost")
VALUES (4, 'GenerateCv', 1);

CREATE INDEX "IX_AiRecommendations_AiRecommendationId" ON public."AiRecommendations" ("AiRecommendationId");

CREATE INDEX "IX_AiRecommendations_UserId" ON public."AiRecommendations" ("UserId");

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON public."AspNetUsers" ("NormalizedEmail");

CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_CareerPath_AiRecommendationId" ON public."CareerPath" ("AiRecommendationId");

CREATE INDEX "IX_CareerPath_CareerStatisticsId" ON public."CareerPath" ("CareerStatisticsId");

CREATE INDEX "IX_CareerPath_SwotAnalysisId" ON public."CareerPath" ("SwotAnalysisId");

CREATE INDEX "IX_CareerStatistics_AiRecommendationId" ON public."CareerStatistics" ("AiRecommendationId");

CREATE INDEX "IX_CertificateEntry_UserProfileUserId" ON public."CertificateEntry" ("UserProfileUserId");

CREATE INDEX "IX_EducationEntry_UserProfileUserId" ON public."EducationEntry" ("UserProfileUserId");

CREATE INDEX "IX_GeneratedCvs_UserId" ON public."GeneratedCvs" ("UserId");

CREATE INDEX "IX_LanguageEntry_UserProfileUserId" ON public."LanguageEntry" ("UserProfileUserId");

CREATE INDEX "IX_MarketTrends_AiRecommendationId" ON public."MarketTrends" ("AiRecommendationId");

CREATE INDEX "IX_NextStep_AiRecommendationId" ON public."NextStep" ("AiRecommendationId");

CREATE INDEX "IX_SkillDemand_AiRecommendationId" ON public."SkillDemand" ("AiRecommendationId");

CREATE INDEX "IX_WorkExperienceEntry_UserProfileUserId" ON public."WorkExperienceEntry" ("UserProfileUserId");

SELECT setval(
    pg_get_serial_sequence('public."ServiceCosts"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM public."ServiceCosts") + 1,
        nextval(pg_get_serial_sequence('public."ServiceCosts"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250531082919_InitialCreate', '9.0.3');

CREATE TABLE public."FinancialSurveys" (
    "UserId" text NOT NULL,
    "CurrentSalary" numeric,
    "DesiredSalary" numeric,
    "HasLoans" boolean NOT NULL,
    "LoanDetails" text,
    "RiskAppetite" integer NOT NULL,
    "WillingToRelocate" boolean NOT NULL,
    CONSTRAINT "PK_FinancialSurveys" PRIMARY KEY ("UserId"),
    CONSTRAINT "FK_FinancialSurveys_UserProfiles_UserId" FOREIGN KEY ("UserId") REFERENCES public."UserProfiles" ("UserId") ON DELETE CASCADE
);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250531100043_AddFinancialSurveyToUserProfile', '9.0.3');

COMMIT;

