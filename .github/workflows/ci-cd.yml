name: CI/CD Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x" 

      - name: Update certificates
        run: sudo update-ca-certificates --fresh

      - name: Restore dependencies
        run: dotnet restore VocareWebAPI/VocareWebAPI.csproj --source https://api.nuget.org/v3/index.json --source https://www.nuget.org/api/v2

      - name: Build
        run: dotnet build VocareWebAPI/VocareWebAPI.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test VocareWebAPI/VocareWebAPI.Tests.csproj --no-build --verbosity normal
        continue-on-error: true

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-release
          path: VocareWebAPI/bin/Release

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci --force
        working-directory: frontend

      # <<< DODANY KROK: odbuduj LightningCSS, żeby pobrać binarkę pod Linuksa >>>
      - name: Rebuild LightningCSS
        run: npm rebuild lightningcss
        working-directory: frontend

      - name: Build
        run: npm run build
        working-directory: frontend

      - name: Test
        run: npm run test
        working-directory: frontend
        continue-on-error: true

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
